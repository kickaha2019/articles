Title:
	Website development

Text:
	I have spent numerous hours tinkering with my personal website.  
	It started off as HTML pages generated from text files, then I tried
	''iWeb'', then HTML pages generated
	from data in [https://www.filemaker.com/ Filemaker]'s ''Bento'',
	then [Joomla],
	then back to ''iWeb'', and currently it's HTML pages statically generated
	from text files.  This time I've rearranged the deck chairs to make the
	website more blog-like, and to enable multiple paths to the same page.

	Why static generation rather than using something dynamic like [https://wordpress.com/ Wordpress]
	or [Drupal] or [Joomla]? Those are good tools for
	the right website, but the static approach reduces worries about keeping
	one's website secure, about having to apply updates to the software
	running the website. The static approach is likely to be faster, less
	demanding on the web server, but that hasn't been a concern to me at
	least.

	Having the website defined as text files on one's local machine
	rather in MySQL database tables is a lot easier to backup, and also
	less at risk at being locked into one particular technology.

	I can edit the website from the comfort of my 
	[https://www.apple.com/uk/ipad/ iPad] while I'm
	lapsitting a cat.  The website can be re-structured by
	moving and renaming files and directories around.  The text files
	have a simplistic format so I can just type away, and most of the
	text is content.

	So why not use one of the established static website generators
	like [Jekyll] or [https://gohugo.io/ Hugo]?
	Those are also good tools for the right website, with plenty of
	functionality. One answer is computing is a hobby of mine, and
	implementing a website generator is fun in its way to me. None of
	the static website generators give quite what I'm after, and while
	they might be customised to do so in terms of plugins and templates
	the learning curve looks as steep as writing one's own simple
	generator.

	Another answer is that these tools to me are about flexibility and
	configurability. I wanted something which was deliberately limited
	and constraining, which would dissuade me from being too clever.
	So an analogy might be I'd take an automatic car over one with
	a manual gearbox, being able to choose which gear I'm in doesn't
	interest me so much as getting from A to B.

	There is the minor question of whether anyone else reads the
	pages on my website, or whether it's like all the blogs out
	there with zero comments.  When I've blundered (like failing
	to replace the default text on iWeb pages, or got the
	formatting wrong) I take some comfort in thinking no-one may
	have seen my misdeed.  But it's rare for people to report mistakes
	on websites, they normally just move on.
